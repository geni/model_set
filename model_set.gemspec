Gem::Specification.new do |s|
  s.name = %q{model_set}
  s.version = "0.10.2"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Justin Balthrop"]
  s.date = %q{2009-04-27}
  s.description = %q{Easy manipulation of sets of ActiveRecord models}
  s.email = %q{code@justinbalthrop.com}
  s.files = ["README.rdoc", "VERSION.yml", "LICENSE", "lib/model_set/conditioned.rb", "lib/model_set/conditions.rb", "lib/model_set/query.rb", "lib/model_set/raw_query.rb", "lib/model_set/raw_sql_query.rb", "lib/model_set/set_query.rb", "lib/model_set/solr_query.rb", "lib/model_set/sphinx_query.rb", "lib/model_set/sql_base_query.rb", "lib/model_set/sql_query.rb", "lib/model_set.rb", "lib/multi_set.rb", "test/model_set_test.rb", "test/multi_set_test.rb", "test/test_helper.rb", "vendor/sphinx_client", "vendor/sphinx_client/init.rb", "vendor/sphinx_client/install.rb", "vendor/sphinx_client/lib", "vendor/sphinx_client/lib/sphinx", "vendor/sphinx_client/lib/sphinx/client.rb", "vendor/sphinx_client/lib/sphinx/request.rb", "vendor/sphinx_client/lib/sphinx/response.rb", "vendor/sphinx_client/lib/sphinx.rb", "vendor/sphinx_client/Rakefile", "vendor/sphinx_client/README.rdoc", "vendor/sphinx_client/spec", "vendor/sphinx_client/spec/client_response_spec.rb", "vendor/sphinx_client/spec/client_spec.rb", "vendor/sphinx_client/spec/fixtures", "vendor/sphinx_client/spec/fixtures/default_search.php", "vendor/sphinx_client/spec/fixtures/default_search_index.php", "vendor/sphinx_client/spec/fixtures/excerpt_custom.php", "vendor/sphinx_client/spec/fixtures/excerpt_default.php", "vendor/sphinx_client/spec/fixtures/excerpt_flags.php", "vendor/sphinx_client/spec/fixtures/field_weights.php", "vendor/sphinx_client/spec/fixtures/filter.php", "vendor/sphinx_client/spec/fixtures/filter_exclude.php", "vendor/sphinx_client/spec/fixtures/filter_float_range.php", "vendor/sphinx_client/spec/fixtures/filter_float_range_exclude.php", "vendor/sphinx_client/spec/fixtures/filter_range.php", "vendor/sphinx_client/spec/fixtures/filter_range_exclude.php", "vendor/sphinx_client/spec/fixtures/filter_range_int64.php", "vendor/sphinx_client/spec/fixtures/filter_ranges.php", "vendor/sphinx_client/spec/fixtures/filters.php", "vendor/sphinx_client/spec/fixtures/filters_different.php", "vendor/sphinx_client/spec/fixtures/geo_anchor.php", "vendor/sphinx_client/spec/fixtures/group_by_attr.php", "vendor/sphinx_client/spec/fixtures/group_by_attrpair.php", "vendor/sphinx_client/spec/fixtures/group_by_day.php", "vendor/sphinx_client/spec/fixtures/group_by_day_sort.php", "vendor/sphinx_client/spec/fixtures/group_by_month.php", "vendor/sphinx_client/spec/fixtures/group_by_week.php", "vendor/sphinx_client/spec/fixtures/group_by_year.php", "vendor/sphinx_client/spec/fixtures/group_distinct.php", "vendor/sphinx_client/spec/fixtures/id_range.php", "vendor/sphinx_client/spec/fixtures/id_range64.php", "vendor/sphinx_client/spec/fixtures/index_weights.php", "vendor/sphinx_client/spec/fixtures/keywords.php", "vendor/sphinx_client/spec/fixtures/limits.php", "vendor/sphinx_client/spec/fixtures/limits_cutoff.php", "vendor/sphinx_client/spec/fixtures/limits_max.php", "vendor/sphinx_client/spec/fixtures/limits_max_cutoff.php", "vendor/sphinx_client/spec/fixtures/match_all.php", "vendor/sphinx_client/spec/fixtures/match_any.php", "vendor/sphinx_client/spec/fixtures/match_boolean.php", "vendor/sphinx_client/spec/fixtures/match_extended.php", "vendor/sphinx_client/spec/fixtures/match_extended2.php", "vendor/sphinx_client/spec/fixtures/match_fullscan.php", "vendor/sphinx_client/spec/fixtures/match_phrase.php", "vendor/sphinx_client/spec/fixtures/max_query_time.php", "vendor/sphinx_client/spec/fixtures/miltiple_queries.php", "vendor/sphinx_client/spec/fixtures/ranking_bm25.php", "vendor/sphinx_client/spec/fixtures/ranking_none.php", "vendor/sphinx_client/spec/fixtures/ranking_proximity.php", "vendor/sphinx_client/spec/fixtures/ranking_proximity_bm25.php", "vendor/sphinx_client/spec/fixtures/ranking_wordcount.php", "vendor/sphinx_client/spec/fixtures/retries.php", "vendor/sphinx_client/spec/fixtures/retries_delay.php", "vendor/sphinx_client/spec/fixtures/select.php", "vendor/sphinx_client/spec/fixtures/set_override.php", "vendor/sphinx_client/spec/fixtures/sort_attr_asc.php", "vendor/sphinx_client/spec/fixtures/sort_attr_desc.php", "vendor/sphinx_client/spec/fixtures/sort_expr.php", "vendor/sphinx_client/spec/fixtures/sort_extended.php", "vendor/sphinx_client/spec/fixtures/sort_relevance.php", "vendor/sphinx_client/spec/fixtures/sort_time_segments.php", "vendor/sphinx_client/spec/fixtures/sphinxapi.php", "vendor/sphinx_client/spec/fixtures/update_attributes.php", "vendor/sphinx_client/spec/fixtures/update_attributes_mva.php", "vendor/sphinx_client/spec/fixtures/weights.php", "vendor/sphinx_client/spec/sphinx", "vendor/sphinx_client/spec/sphinx/sphinx-id64.conf", "vendor/sphinx_client/spec/sphinx/sphinx.conf", "vendor/sphinx_client/spec/sphinx/sphinx_test.sql", "vendor/sphinx_client/sphinx.yml.tpl", "vendor/sphinx_client/tasks", "vendor/sphinx_client/tasks/sphinx.rake"]
  s.has_rdoc = true
  s.homepage = %q{http://github.com/ninjudd/model_set}
  s.rdoc_options = ["--inline-source", "--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.2.0}
  s.summary = %q{Easy manipulation of sets of ActiveRecord models}

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 2

    if current_version >= 3 then
    else
    end
  else
  end
end
